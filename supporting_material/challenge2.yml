# Infrastructure as Code 
# Exercise solution
# Carlos Rivas February 2021

AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the required network infrastructure for Public and Private routing with Internet access
Parameters:
  VPCCIDR:
    Type: String
  PrivSubnetCIDR:
    Type: String
  PubSubnetCIDR:
    Type: String
Resources:
  MainVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      Tags: 
        - Key: Name
          Value: "Main VPC"
  InternetGW:
    Type: AWS::EC2::InternetGateway
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGW
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      # Availability zone at your discretion or
      # as a parameter
      AvailabilityZone: 'us-east-1a'
      CidrBlock: !Ref PubSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: "Public Subnet AZ1"
      VpcId: !Ref MainVPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: 'us-east-1b'
      CidrBlock: !Ref PrivSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: "Private Subnet AZ1"
      VpcId: !Ref MainVPC
  NAT:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId:
          Fn::GetAtt:
          - EIP
          - AllocationId
        SubnetId: !Ref PublicSubnet1
        Tags:
        - Key: Name
          Value: "NAT to be used by servers in the private subnet"
  EIP:
    Type: AWS::EC2::EIP
    Properties:
        Tags:
        - Key: Name
          Value: "Elastic IP for our NAT Gateway"
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: "Private Route Table"
      VpcId: !Ref MainVPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: "Public Route Table"
      VpcId: !Ref MainVPC
  AssociatePUBRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  AssociatePRIVRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
  PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: InternetGW
  PrivateInternetOutboundRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: PrivateRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId:
         Ref: NAT

# Description: Challenge 2 Infrastructure

# Parameters:
#   EnvironmentName:
#     Description: The name of the environment to deploy to.
#     Type: String

#   VpcCIDR:
#     Description: Please enter the VPC CIDR.
#     Type: String
#     Default: 10.0.0.0/16

#   PublicSubnetCIDR:
#     Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
#     Type: String
#     Default: 10.0.0.0/24

#   PrivateSubnetCIDR:
#     Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
#     Type: String
#     Default: 10.0.0.0/24

# Resources:
#   VPC:
#     Type: AWS::EC2::VPC
#     Properties:
#       CidrBlock: !Ref VpcCIDR
#       EnableDnsHostnames: true
#       Tags:
#         - Key: Name
#           Value: !Ref EnvironmentName

#   InternetGateway:
#     Type: AWS::EC2::InternetGateway
#     Properties:
#       Tags:
#         - Key: Name
#           Value: !Ref EnvironmentName

#   InternetGatewayAttachment:
#     Type: AWS::EC2::VPCGatewayAttachment
#     Properties:
#       InternetGatewayId: !Ref InternetGateway
#       VpcId: !Ref VPC

#   PublicSubnet: 
#     Type: AWS::EC2::Subnet
#     Properties:
#       VpcId: !Ref VPC
#       CidrBlock: !Ref PublicSubnetCIDR
#       MapPublicIpOnLaunch: true
#       AvailabilityZone: !Select [0, !GetAZs '']
#       Tags:
#         - Key: Name
#           Value: !Sub "${EnvironmentName} Public Subnet (AZ1)"

#   PrivateSubnet:
#     Type: AWS::EC2::Subnet
#     Properties:
#       VpcId: !Ref VPC
#       CidrBlock: !Ref PrivateSubnetCIDR
#       MapPublicIpOnLaunch: false
#       AvailabilityZone: !Select [0, !GetAZs '']
#       Tags:
#         - Key: Name
#           Value: !Sub "${EnvironmentName} Private Subnet (AZ1)"

#   NatGatewayEIP:
#     Type: AWS::EC2::EIP
#     DependsOn: InternetGatewayAttachment
#     Properties:
#       Domain: vpc

#   NatGateway:
#     Type: AWS::EC2::NatGateway
#     Properties:
#       AllocationId: !GetAtt NatGatewayEIP.AllocationId
#       SubnetId: !Ref PublicSubnet

#   PublicRouteTable:
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VPC
#       Tags:
#         - Key: Name
#           Value: !Sub "${EnvironmentName} Public Route Table"

#   DefaultRoute:
#     Type: AWS::EC2::Route
#     DependsOn: InternetGatewayAttachment
#     Properties:
#       RouteTableId: !Ref PublicRouteTable
#       DestinationCidrBlock: 0.0.0.0/0
#       GatewayId: !Ref InternetGateway

#   PublicSubnetRouteTableAssociation:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       RouteTableId: !Ref PublicRouteTable
#       SubnetId: !Ref PublicSubnet

#   PrivateRouteTable:
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VPC
#       Tags:
#         - Key: Name
#           Value: !Sub "${EnvironmentName} Private Route Table"

#   DefaultPrivateRoute:
#     Type: AWS::EC2::Route
#     DependsOn: InternetGatewayAttachment
#     Properties:
#       RouteTableId: !Ref PrivateRouteTable
#       DestinationCidrBlock: 0.0.0.0/0

#   PrivateSubnetRouteTableAssociation:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       RouteTableId: !Ref PrivateRouteTable
#       SubnetId: !Ref PrivateSubnet
